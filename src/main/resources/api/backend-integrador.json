{
  "swagger":"2.0",
  "info":{
    "description":"Proyecto integrador gestion de clinica odontologica",
    "version":"1.0",
    "title":"backend-integrador"
  },
  "basePath":"/",
  "tags":[
    {
      "name":"odontologo-controller",
      "description":"Odontologo Controller"
    },
    {
      "name":"paciente-controller",
      "description":"Paciente Controller"
    },
    {
      "name":"turno-controller",
      "description":"Turno Controller"
    }
  ],
  "paths":{
    "/odontologos": {
      "get": {
        "tags": [
          "odontologo-controller"
        ],
        "summary": "Búsqueda de todos los odontólogos",
        "description": "Recupera todos los odontólogos de la base de datos.",
        "operationId": "buscarTodosLosOdontologosUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Odontólogos obtenidos correctamente",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OdontologoSalidaDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "odontologo-controller"
        ],
        "summary": "Guardar un odontólogo",
        "description": "Guarda un odontólogo en la base de datos.",
        "operationId": "guardarOdontologoUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "odontologo",
            "description": "odontologo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OdontologoEntradaDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OdontologoSalidaDTO"
            }
          },
          "201": {
            "description": "Odontólogo guardado correctamente",
            "schema": {
              "$ref": "#/definitions/OdontologoSalidaDTO"
            }
          },
          "400": {
            "description": "Error en los datos ingresados ",
            "schema": {
              "$ref": "#/definitions/ErrorRespuestaDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/odontologos/{id}": {
      "get": {
        "tags": [
          "odontologo-controller"
        ],
        "summary": "Búsqueda de un odontólogo por Id",
        "description": "Recupera un odontólogo por su identificador único.",
        "operationId": "buscarOdontologoPorIdUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Odontólogo obtenido correctamente",
            "schema": {
              "$ref": "#/definitions/OdontologoSalidaDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "odontologo-controller"
        ],
        "summary": "Actualizar un odontólogo",
        "description": "Actualiza un odontólogo en la base de datos.",
        "operationId": "actualizarOdontologoUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "odontologo",
            "description": "odontologo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OdontologoEntradaDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Odontólogo actualizado correctamente",
            "schema": {
              "$ref": "#/definitions/OdontologoSalidaDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Odontólogo a actualizar no encontrado",
            "schema": {
              "$ref": "#/definitions/ErrorRespuestaDTO"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "odontologo-controller"
        ],
        "summary": "Eliminar un odontólogo",
        "description": "Elimina un odontólogo de la base de datos.",
        "operationId": "eliminarOdontologoUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "Odontólogo eliminado correctamente",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Odontólogo a eliminar no encontrado",
            "schema": {
              "$ref": "#/definitions/ErrorRespuestaDTO"
            }
          }
        }
      }
    },
    "/pacientes": {
      "get": {
        "tags": [
          "paciente-controller"
        ],
        "summary": "Búsqueda de todos los pacientes",
        "description": "Recupera todos los pacientes de la base de datos.",
        "operationId": "listarPacientesUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Pacientes obtenidos correctamente",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PacienteSalidaDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "paciente-controller"
        ],
        "summary": "Guardar un paciente",
        "description": "Guarda un paciente en la base de datos.",
        "operationId": "guardarPacienteUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "paciente",
            "description": "paciente",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PacienteEntradaDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PacienteSalidaDTO"
            }
          },
          "201": {
            "description": "Paciente guardado correctamente",
            "schema": {
              "$ref": "#/definitions/PacienteSalidaDTO"
            }
          },
          "400": {
            "description": "Error en los datos ingresados ",
            "schema": {
              "$ref": "#/definitions/ErrorRespuestaDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pacientes/{id}": {
      "get": {
        "tags": [
          "paciente-controller"
        ],
        "summary": "Búsqueda de un paciente por Id",
        "description": "Recupera un paciente por su identificador único.",
        "operationId": "buscarPacientePorIdUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Paciente obtenido correctamente",
            "schema": {
              "$ref": "#/definitions/PacienteSalidaDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "paciente-controller"
        ],
        "summary": "Actualizar un paciente",
        "description": "Actualiza un paciente en la base de datos.",
        "operationId": "actualizarPacienteUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "paciente",
            "description": "paciente",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PacienteEntradaDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paciente actualizado correctamente",
            "schema": {
              "$ref": "#/definitions/PacienteSalidaDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Error en los datos ingresados",
            "schema": {
              "$ref": "#/definitions/ErrorRespuestaDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Paciente a actualizar no encontrado",
            "schema": {
              "$ref": "#/definitions/ErrorRespuestaDTO"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "paciente-controller"
        ],
        "summary": "Eliminar un paciente",
        "description": "Elimina un paciente de la base de datos.",
        "operationId": "eliminarPacienteUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "Paciente eliminado correctamente",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Paciente a eliminar no encontrado",
            "schema": {
              "$ref": "#/definitions/ErrorRespuestaDTO"
            }
          }
        }
      }
    },
    "/turnos": {
      "get": {
        "tags": [
          "turno-controller"
        ],
        "summary": "Búsqueda de todos los turnos",
        "description": "Recupera todos los turnos de la base de datos.",
        "operationId": "listarTurnosUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Turnos obtenidos correctamente",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TurnoSalidaDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "turno-controller"
        ],
        "summary": "Guardar un turno",
        "description": "Guarda un turno en la base de datos.",
        "operationId": "registrarTurnoUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "turno",
            "description": "turno",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TurnoEntradaDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TurnoSalidaDTO"
            }
          },
          "201": {
            "description": "Turno guardado correctamente",
            "schema": {
              "$ref": "#/definitions/TurnoSalidaDTO"
            }
          },
          "400": {
            "description": "Error en los datos ingresados ",
            "schema": {
              "$ref": "#/definitions/ErrorRespuestaDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/turnos/{id}": {
      "get": {
        "tags": [
          "turno-controller"
        ],
        "summary": "Búsqueda de un turno por Id",
        "description": "Recupera un turno por su identificador único.",
        "operationId": "buscarTurnoUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Turno obtenido correctamente",
            "schema": {
              "$ref": "#/definitions/TurnoSalidaDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "turno-controller"
        ],
        "summary": "Actualizar un turno",
        "description": "Actualiza un turno en la base de datos.",
        "operationId": "actualizarTurnoUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "turnoEntradaDTO",
            "description": "turnoEntradaDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TurnoEntradaDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Turno actualizado correctamente",
            "schema": {
              "$ref": "#/definitions/TurnoSalidaDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Error en los datos ingresados",
            "schema": {
              "$ref": "#/definitions/ErrorRespuestaDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Turno a actualizar no encontrado",
            "schema": {
              "$ref": "#/definitions/ErrorRespuestaDTO"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "turno-controller"
        ],
        "summary": "Eliminar un turno",
        "description": "Elimina un turno de la base de datos.",
        "operationId": "eliminarTurnoUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "Turno eliminado correctamente",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Turno a eliminar no encontrado",
            "schema": {
              "$ref": "#/definitions/ErrorRespuestaDTO"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorRespuestaDTO": {
      "type": "object",
      "properties": {
        "mensaje": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "DomicilioEntradaDTO": {
      "type": "object",
      "required": [
        "calle",
        "localidad",
        "provincia"
      ],
      "properties": {
        "calle": {
          "type": "string",
          "minLength": 3,
          "maxLength": 255
        },
        "localidad": {
          "type": "string",
          "minLength": 2,
          "maxLength": 255
        },
        "numero": {
          "type": "integer",
          "format": "int32"
        },
        "provincia": {
          "type": "string",
          "minLength": 2,
          "maxLength": 255
        }
      },
      "title": "DomicilioEntradaDTO"
    },
    "DomicilioSalidaDTO": {
      "type": "object",
      "properties": {
        "calle": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "localidad": {
          "type": "string"
        },
        "numero": {
          "type": "integer",
          "format": "int32"
        },
        "provincia": {
          "type": "string"
        }
      },
      "title": "DomicilioSalidaDTO"
    },
    "OdontologoEntradaDTO": {
      "type": "object",
      "required": [
        "apellido",
        "nombre",
        "numeroDeMatricula"
      ],
      "properties": {
        "apellido": {
          "type": "string",
          "minLength": 2,
          "maxLength": 50
        },
        "nombre": {
          "type": "string",
          "minLength": 2,
          "maxLength": 50
        },
        "numeroDeMatricula": {
          "type": "string",
          "minLength": 2,
          "maxLength": 50
        }
      },
      "title": "OdontologoEntradaDTO"
    },
    "OdontologoSalidaDTO": {
      "type": "object",
      "properties": {
        "apellido": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "nombre": {
          "type": "string"
        },
        "numeroDeMatricula": {
          "type": "string"
        }
      },
      "title": "OdontologoSalidaDTO"
    },
    "PacienteEntradaDTO": {
      "type": "object",
      "required": [
        "apellido",
        "domicilioEntradaDTO",
        "fechaIngreso",
        "nombre"
      ],
      "properties": {
        "apellido": {
          "type": "string",
          "minLength": 2,
          "maxLength": 50
        },
        "dni": {
          "type": "integer",
          "format": "int32"
        },
        "domicilioEntradaDTO": {
          "$ref": "#/definitions/DomicilioEntradaDTO"
        },
        "fechaIngreso": {
          "type": "string",
          "example": "yyyy-MM-dd"
        },
        "nombre": {
          "type": "string",
          "minLength": 2,
          "maxLength": 50
        }
      },
      "title": "PacienteEntradaDTO"
    },
    "PacienteSalidaDTO": {
      "type": "object",
      "properties": {
        "apellido": {
          "type": "string"
        },
        "dni": {
          "type": "integer",
          "format": "int32"
        },
        "domicilioSalidaDTO": {
          "$ref": "#/definitions/DomicilioSalidaDTO"
        },
        "fechaIngreso": {
          "type": "string",
          "format": "date"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "nombre": {
          "type": "string"
        }
      },
      "title": "PacienteSalidaDTO"
    },
    "TurnoEntradaDTO": {
      "type": "object",
      "required": [
        "fechaYHora",
        "odontologoId",
        "pacienteId"
      ],
      "properties": {
        "fechaYHora": {
          "type": "string",
          "example": "yyyy-MM-dd HH:mm:ss"
        },
        "odontologoId": {
          "type": "integer",
          "format": "int64"
        },
        "pacienteId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "TurnoEntradaDTO"
    },
    "TurnoSalidaDTO": {
      "type": "object",
      "properties": {
        "fechaYHora": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "odontologo": {
          "$ref": "#/definitions/OdontologoSalidaDTO"
        },
        "paciente": {
          "$ref": "#/definitions/PacienteSalidaDTO"
        }
      },
      "title": "TurnoSalidaDTO"
    }
  }
}